knitr::opts_chunk$set(echo = TRUE)
# carregar pacotes
library(readxl); library(ggplot2); library(readr); library(stringi);
# carregar pacotes
library(readxl); library(ggplot2); library(readr); library(stringi);
library(stringr); library(plyr); library(dplyr); library(RQDA)
# salvar codigos em arquivo para leitura markdown
sumario_cod <- summaryCodings()
sumario_cod
cont_cod_data <- data.frame(sumario_cod$NumOfCoding)
cont_cod_data
write.csv(cont_cod_data, "data/cont_cod_data.csv", row.names = F)
# infos sobre cada codificacao
coding_table <- getCodingTable()
coding_table
write.csv(coding_table, "data/coding_table.csv", row.names = F)
# selecionar codigos relativos ao tema
cont_cod_tema <- cont_cod_data[str_detect(cont_cod_data$Var1, "tema_"),]
# visualizar base
cont_cod_tema
# criar variavel de  proporcao de cada tema em relacao ao total
cont_cod_tema <- mutate(cont_cod_tema, prop_tema = round((Freq / sum(Freq))*100, 2) )
# ordenar os valores
cont_cod_tema$Var1 <- factor(cont_cod_tema$Var1,
levels = cont_cod_tema$Var1[order(cont_cod_tema$prop_tema)])
# visualizar graficamente e salvar
ggplot(cont_cod_tema, aes(x = Var1, y = prop_tema))+
geom_bar(stat = "identity", fill = "#15041c") +
geom_label(aes(x = Var1, y = prop_tema, label = prop_tema), size = 3.5)+
labs(y = "Procentagem do Total", x = "", title = "") +
coord_flip()
ggsave("prop_debate_tema.png", path = "results",width = 7, height = 3, units = "in")
# selecionar codigos que nao sao de representantes
paste_voz<- c("cat_", "tema_", "DESTAQUES", "DUVIDA_", "atua_", "DECISOES", "termo_", "tema2_", "IDENT_MEMO")
cont_cod_rep <- cont_cod_data[!str_detect(cont_cod_data$Var1, paste(paste_voz, collapse = '|')),]
# Carregar base de dados de conselheiros e categorias das suas respectivas intituicoes
representantes_instituicoes_apacc <- read_excel("data/representantes_instituicoes_apacc.xlsx")
# funcao para padronizar nomes
cleanString <- function(x){
library(plyr); library(stringi); library(stringr)
x_mani = stri_trans_general(x, "Latin-ASCII")%>%
str_replace_all("_", " ")%>%
tolower()
return(x_mani)
}
representantes_instituicoes_apacc$nome_consel
# executa funcao
representantes_instituicoes_apacc$nome_consel <- cleanString(representantes_instituicoes_apacc$nome_consel)
# executa funcao
representantes_instituicoes_apacc$nome_consel
cont_cod_rep$nome_consel <- cleanString(cont_cod_rep$Var1)
cont_cod_rep$nome_consel
# mergir bases
participaData <- merge(cont_cod_rep, representantes_instituicoes_apacc, by = "nome_consel")
# retirar contagem do presidente do conselho e dos analistas*
participaData <- participaData[participaData$entidade_sigla != "ICMBIO",]
# contagem por grupo
participa_cont <- aggregate(participaData$Freq, by=list(Category=participaData$categoria1), FUN=sum)
participaData$categoria1
participa_cont$numero_assentos
# inserir info de assentos na base
participa_cont$numero_assentos <- c(6, 6, 12, 8, 3, 3)
# calcular proporcionalidade
participa_cont <- mutate(participa_cont, participaProp = round((x/numero_assentos),1))
# renomear para grafico
participa_cont$Category <- as.character(participa_cont$Category)
participa_cont$Category[6] <- "Organizações de educação e cultura \n e associações comunitárias"
# ordenar
participa_cont$Category <- factor(participa_cont$Category,
levels = participa_cont$Category[order(participa_cont$participaProp)])
# grafico comparativo
ggplot(participa_cont, aes(x = Category, y = participaProp))+
geom_bar(stat = "identity", fill = "#15041c") +
geom_label(aes(label = participaProp), size = 3.5)+
labs(y = "Número de Situações de Fala por Assento", x = "", title = "") +
coord_flip()+
ggsave("prop_voz_cat.png", path = "results", width = 8, height = 3, units = "in")
